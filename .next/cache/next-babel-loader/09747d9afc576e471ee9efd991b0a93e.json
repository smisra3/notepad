{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/home/shubhankar/Documents/MY_NOTEPAD/notepad/pages/post.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport fetch from 'isomorphic-unfetch';\n\nvar Post = function Post(props) {\n  var router = useRouter();\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, router.query.title), __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, props.quote), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"This is the blog post content.\"));\n};\n\nPost.getInitialProps = function _callee() {\n  var res;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('http://127.0.0.1:3000/randomQuote'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          _context.t0 = _context.sent;\n          return _context.abrupt(\"return\", {\n            quote: _context.t0\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Post;","map":{"version":3,"sources":["/home/shubhankar/Documents/MY_NOTEPAD/notepad/pages/post.js"],"names":["useRouter","fetch","Post","props","router","query","title","quote","getInitialProps","res","json"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;AACtB,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKI,MAAM,CAACC,KAAP,CAAaC,KAAlB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,KAAK,CAACI,KAAX,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAHF,CADF;AAOD,CATD;;AAWAL,IAAI,CAACM,eAAL,GAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACHP,KAAK,CAAC,mCAAD,CADF;;AAAA;AACfQ,UAAAA,GADe;AAAA;AAAA,2CAGNA,GAAG,CAACC,IAAJ,EAHM;;AAAA;AAAA;AAAA;AAGnBH,YAAAA,KAHmB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAOA,eAAeL,IAAf","sourcesContent":["import { useRouter } from 'next/router';\nimport fetch from 'isomorphic-unfetch';\n\nconst Post = (props) => {\n  const router = useRouter();\n  return (\n    <>\n      <h1>{router.query.title}</h1>\n      <h3>{props.quote}</h3>\n      <p>This is the blog post content.</p>\n    </>\n  );\n};\n\nPost.getInitialProps = async () => {\n  const res = await fetch('http://127.0.0.1:3000/randomQuote');\n  return {\n    quote: await res.json()\n  }\n};\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}