{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/shubhankar/Documents/MY_NOTEPAD/notepad/pages/post.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useRouter } from 'next/router';\nimport fetch from 'isomorphic-unfetch';\n\nvar Post = function Post(props) {\n  var router = useRouter();\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, router.query.title), __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, props.quote), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"This is the blog post content.\"));\n};\n\nPost.getInitialProps = function _callee() {\n  var _len,\n      rest,\n      _key,\n      res,\n      ttt,\n      quote,\n      _args = arguments;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          for (_len = _args.length, rest = new Array(_len), _key = 0; _key < _len; _key++) {\n            rest[_key] = _args[_key];\n          }\n\n          console.log(rest);\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetch('http://127.0.0.1:3000/api/randomQuote'));\n\n        case 4:\n          res = _context.sent;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(fetch('http://127.0.0.1:3001/tasks'));\n\n        case 7:\n          ttt = _context.sent;\n          _context.next = 10;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 10:\n          quote = _context.sent;\n          return _context.abrupt(\"return\", _objectSpread({}, quote, {\n            ttt: ttt\n          }));\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Post;","map":{"version":3,"sources":["/home/shubhankar/Documents/MY_NOTEPAD/notepad/pages/post.js"],"names":["useRouter","fetch","Post","props","router","query","title","quote","getInitialProps","rest","console","log","res","ttt","json"],"mappings":";;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;AACtB,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKI,MAAM,CAACC,KAAP,CAAaC,KAAlB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,KAAK,CAACI,KAAX,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAHF,CADF;AAOD,CATD;;AAWAL,IAAI,CAACM,eAAL,GAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAUC,IAAV;AAAUA,YAAAA,IAAV;AAAA;;AACrBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AADqB;AAAA,2CAEHR,KAAK,CAAC,uCAAD,CAFF;;AAAA;AAEfW,UAAAA,GAFe;AAAA;AAAA,2CAGHX,KAAK,CAAC,6BAAD,CAHF;;AAAA;AAGfY,UAAAA,GAHe;AAAA;AAAA,2CAIDD,GAAG,CAACE,IAAJ,EAJC;;AAAA;AAIfP,UAAAA,KAJe;AAAA,6DAMhBA,KANgB;AAOnBM,YAAAA,GAAG,EAAHA;AAPmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAWA,eAAeX,IAAf","sourcesContent":["import { useRouter } from 'next/router';\nimport fetch from 'isomorphic-unfetch';\n\nconst Post = (props) => {\n  const router = useRouter();\n  return (\n    <>\n      <h1>{router.query.title}</h1>\n      <h3>{props.quote}</h3>\n      <p>This is the blog post content.</p>\n    </>\n  );\n};\n\nPost.getInitialProps = async (...rest) => {\n  console.log(rest)\n  const res = await fetch('http://127.0.0.1:3000/api/randomQuote');\n  const ttt = await fetch('http://127.0.0.1:3001/tasks');\n  const quote = await res.json();\n  return {\n    ...quote,\n    ttt,\n  }\n};\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}