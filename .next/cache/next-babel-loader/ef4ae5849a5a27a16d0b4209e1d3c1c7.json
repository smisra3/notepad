{"ast":null,"code":"var _jsxFileName = \"/home/shubhankar/Documents/MY_NOTEPAD/notepad/pages/post.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useRouter } from 'next/router';\nimport fetch from 'isomorphic-unfetch';\n\nconst Post = props => {\n  const router = useRouter();\n  console.log(props);\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, router.query.title), __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, props.quote), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"This is the blog post content.\"));\n};\n\nPost.getInitialProps = async (...rest) => {\n  const res = await fetch('http://127.0.0.1:3000/api/randomQuote');\n  const ttt = await fetch('http://127.0.0.1:3001/tasks');\n  const quote = await res.json();\n  const tttres = await ttt.json();\n  return _objectSpread({}, quote, {\n    tttres\n  });\n};\n\nexport default Post;","map":{"version":3,"sources":["/home/shubhankar/Documents/MY_NOTEPAD/notepad/pages/post.js"],"names":["useRouter","fetch","Post","props","router","console","log","query","title","quote","getInitialProps","rest","res","ttt","json","tttres"],"mappings":";;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,MAAM,CAACG,KAAP,CAAaC,KAAlB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKL,KAAK,CAACM,KAAX,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAHF,CADF;AAOD,CAVD;;AAYAP,IAAI,CAACQ,eAAL,GAAuB,OAAO,GAAGC,IAAV,KAAmB;AACxC,QAAMC,GAAG,GAAG,MAAMX,KAAK,CAAC,uCAAD,CAAvB;AACA,QAAMY,GAAG,GAAG,MAAMZ,KAAK,CAAC,6BAAD,CAAvB;AACA,QAAMQ,KAAK,GAAG,MAAMG,GAAG,CAACE,IAAJ,EAApB;AACA,QAAMC,MAAM,GAAG,MAAMF,GAAG,CAACC,IAAJ,EAArB;AACA,2BACKL,KADL;AAEEM,IAAAA;AAFF;AAID,CATD;;AAWA,eAAeb,IAAf","sourcesContent":["import { useRouter } from 'next/router';\nimport fetch from 'isomorphic-unfetch';\n\nconst Post = (props) => {\n  const router = useRouter();\n  console.log(props)\n  return (\n    <>\n      <h1>{router.query.title}</h1>\n      <h3>{props.quote}</h3>\n      <p>This is the blog post content.</p>\n    </>\n  );\n};\n\nPost.getInitialProps = async (...rest) => {\n  const res = await fetch('http://127.0.0.1:3000/api/randomQuote');\n  const ttt = await fetch('http://127.0.0.1:3001/tasks');\n  const quote = await res.json();\n  const tttres = await ttt.json();\n  return {\n    ...quote,\n    tttres,\n  };\n};\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}